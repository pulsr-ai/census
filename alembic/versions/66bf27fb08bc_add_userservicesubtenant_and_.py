"""Add UserServiceSubtenant and GroupMember models, remove Permission models

Revision ID: 66bf27fb08bc
Revises: 
Create Date: 2025-09-09 17:51:50.532922

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '66bf27fb08bc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First drop dependent tables (foreign key constraints)
    op.drop_index('ix_user_permissions_id', table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index('ix_group_permissions_id', table_name='group_permissions')
    op.drop_table('group_permissions')
    
    # Then drop the parent table
    op.drop_index('ix_permissions_id', table_name='permissions')
    op.drop_index('ix_permissions_name', table_name='permissions')
    op.drop_table('permissions')
    
    # Drop user_groups table
    op.drop_table('user_groups')
    
    # Now create new tables
    op.create_table('group_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('added_by', sa.UUID(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('removed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('removed_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['removed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_members_id'), 'group_members', ['id'], unique=False)
    
    op.create_table('user_service_subtenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('subtenant_id', sa.String(), nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('granted_by', sa.UUID(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['revoked_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_service_active_unique', 'user_service_subtenants', ['user_id', 'service'], unique=True, postgresql_where=sa.text('active = true'))
    op.create_index(op.f('ix_user_service_subtenants_active'), 'user_service_subtenants', ['active'], unique=False)
    op.create_index(op.f('ix_user_service_subtenants_id'), 'user_service_subtenants', ['id'], unique=False)
    op.create_index(op.f('ix_user_service_subtenants_service'), 'user_service_subtenants', ['service'], unique=False)
    op.create_index(op.f('ix_user_service_subtenants_subtenant_id'), 'user_service_subtenants', ['subtenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_groups',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='user_groups_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_groups_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'group_id', name='user_groups_pkey')
    )
    op.create_table('group_permissions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('granted_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='group_permissions_group_id_fkey'),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='group_permissions_permission_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='group_permissions_pkey')
    )
    op.create_index('ix_group_permissions_id', 'group_permissions', ['id'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('granted_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='user_permissions_permission_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_permissions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_permissions_pkey')
    )
    op.create_index('ix_user_permissions_id', 'user_permissions', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resource', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey')
    )
    op.create_index('ix_permissions_name', 'permissions', ['name'], unique=True)
    op.create_index('ix_permissions_id', 'permissions', ['id'], unique=False)
    op.drop_index(op.f('ix_user_service_subtenants_subtenant_id'), table_name='user_service_subtenants')
    op.drop_index(op.f('ix_user_service_subtenants_service'), table_name='user_service_subtenants')
    op.drop_index(op.f('ix_user_service_subtenants_id'), table_name='user_service_subtenants')
    op.drop_index(op.f('ix_user_service_subtenants_active'), table_name='user_service_subtenants')
    op.drop_index('ix_user_service_active_unique', table_name='user_service_subtenants', postgresql_where=sa.text('active = true'))
    op.drop_table('user_service_subtenants')
    op.drop_index(op.f('ix_group_members_id'), table_name='group_members')
    op.drop_table('group_members')
    # ### end Alembic commands ###